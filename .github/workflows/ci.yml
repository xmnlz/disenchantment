name: CI Pipeline

on:
  push:
    branches: [ main, next ]
  pull_request:
    branches: [ '*' ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'

permissions:
  contents: read

jobs:
  test-and-validate:
    name: Test and Validate 
    runs-on: ubuntu-latest   

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x 

      - name: Get Bun Cache Directory
        id: bun-cache-dir
        run: echo "dir=$(bun pm cache)" >> $GITHUB_OUTPUT

      - name: Cache Bun Dependencies
        uses: actions/cache@v4
        id: bun-cache 
        with:
          path: ${{ steps.bun-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      # 'if: steps.bun-cache.outputs.cache-hit != 'true'' if you only want to run install when cache misses
      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Run Linter
        run: bun lint

      - name: Run Unit Tests
        run: bun test

      - name: Bundle Project
        run: bun bundle 

      - name: Validate for JSR Publish (Dry Run)
        run: bunx jsr publish --dry-run --allow-dirty

